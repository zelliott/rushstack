### YamlMime:TSType
name: DocClass1
uid: 'api-documenter-test!DocClass1:class'
package: api-documenter-test!
fullName: DocClass1
summary: This is an example class.
remarks: >-
  [Link to overload 1](xref:api-documenter-test!DocClass1%23exampleFunction:member(1))


  [Link to overload 2](xref:api-documenter-test!DocClass1%23exampleFunction:member(2))



  The constructor for this class is marked as internal. Third-party code should not call the constructor directly or
  create subclasses that extend the `DocClass1` class.
example: []
isPreview: false
isDeprecated: false
type: class
properties:
  - name: optionalProperty
    uid: 'api-documenter-test!DocClass1#optionalProperty:member'
    package: api-documenter-test!
    fullName: optionalProperty
    summary: This is an optional property.
    remarks: ''
    example: []
    isPreview: false
    isDeprecated: false
    syntax:
      content: 'optionalProperty?: number;'
      return:
        type: number
  - name: propertyWithDefault
    uid: 'api-documenter-test!DocClass1#propertyWithDefault:member'
    package: api-documenter-test!
    fullName: propertyWithDefault
    summary: This is a property with a default value.
    remarks: ''
    example: []
    isPreview: false
    isDeprecated: false
    syntax:
      content: 'propertyWithDefault: boolean;'
      return:
        type: boolean
  - name: readonlyProperty
    uid: 'api-documenter-test!DocClass1#readonlyProperty:member'
    package: api-documenter-test!
    fullName: readonlyProperty
    summary: ''
    remarks: ''
    example: []
    isPreview: false
    isDeprecated: false
    syntax:
      content: 'get readonlyProperty(): string;'
      return:
        type: string
  - name: regularProperty
    uid: 'api-documenter-test!DocClass1#regularProperty:member'
    package: api-documenter-test!
    fullName: regularProperty
    summary: This is a regular property that happens to use the SystemEvent type.
    remarks: ''
    example: []
    isPreview: false
    isDeprecated: false
    syntax:
      content: 'regularProperty: SystemEvent;'
      return:
        type: '<xref uid="api-documenter-test!SystemEvent:class" />'
  - name: writeableProperty
    uid: 'api-documenter-test!DocClass1#writeableProperty:member'
    package: api-documenter-test!
    fullName: writeableProperty
    summary: ''
    remarks: ''
    example: []
    isPreview: false
    isDeprecated: false
    syntax:
      content: |-
        get writeableProperty(): string;

        set writeableProperty(value: string);
      return:
        type: string
methods:
  - name: deprecatedExample()
    uid: 'api-documenter-test!DocClass1#deprecatedExample:member(1)'
    package: api-documenter-test!
    fullName: deprecatedExample()
    summary: ''
    remarks: ''
    example: []
    isPreview: false
    isDeprecated: true
    customDeprecatedMessage: Use `otherThing()` instead.
    syntax:
      content: 'deprecatedExample(): void;'
      return:
        type: void
        description: ''
  - name: 'exampleFunction(a, b)'
    uid: 'api-documenter-test!DocClass1#exampleFunction:member(1)'
    package: api-documenter-test!
    fullName: 'exampleFunction(a, b)'
    summary: This is an overloaded function.
    remarks: ''
    example: []
    isPreview: false
    isDeprecated: false
    syntax:
      content: 'exampleFunction(a: string, b: string): string;'
      parameters:
        - id: a
          description: the first string
          type: string
        - id: b
          description: the second string
          type: string
      return:
        type: string
        description: ''
  - name: exampleFunction(x)
    uid: 'api-documenter-test!DocClass1#exampleFunction:member(2)'
    package: api-documenter-test!
    fullName: exampleFunction(x)
    summary: This is also an overloaded function.
    remarks: ''
    example: []
    isPreview: false
    isDeprecated: false
    syntax:
      content: 'exampleFunction(x: number): number;'
      parameters:
        - id: x
          description: the number
          type: number
      return:
        type: number
        description: ''
  - name: interestingEdgeCases()
    uid: 'api-documenter-test!DocClass1#interestingEdgeCases:member(1)'
    package: api-documenter-test!
    fullName: interestingEdgeCases()
    summary: |-
      Example: "<!-- -->{ \\<!-- -->"maxItemsToShow<!-- -->\\<!-- -->": 123 }<!-- -->"

      The regular expression used to validate the constraints is /^\[a-zA-Z0-9<!-- -->\\<!-- -->-\_\]+$/
    remarks: ''
    example: []
    isPreview: false
    isDeprecated: false
    syntax:
      content: 'interestingEdgeCases(): void;'
      return:
        type: void
        description: ''
  - name: optionalParamFunction(x)
    uid: 'api-documenter-test!DocClass1#optionalParamFunction:member(1)'
    package: api-documenter-test!
    fullName: optionalParamFunction(x)
    summary: This is a function with an optional parameter.
    remarks: ''
    example: []
    isPreview: false
    isDeprecated: false
    syntax:
      content: 'optionalParamFunction(x?: number): void;'
      parameters:
        - id: x
          description: the number
          type: number
      return:
        type: void
        description: ''
  - name: 'sumWithExample(x, y)'
    uid: 'api-documenter-test!DocClass1.sumWithExample:member(1)'
    package: api-documenter-test!
    fullName: 'sumWithExample(x, y)'
    summary: Returns the sum of two numbers.
    remarks: This illustrates usage of the `@example` block tag.
    example:
      - |-
        Here's a simple example:

        ```
        // Prints "2":
        console.log(DocClass1.sumWithExample(1,1));
        ```
      - |-
        Here's an example with negative numbers:

        ```
        // Prints "0":
        console.log(DocClass1.sumWithExample(1,-1));
        ```
    isPreview: false
    isDeprecated: false
    syntax:
      content: 'static sumWithExample(x: number, y: number): number;'
      parameters:
        - id: x
          description: the first number to add
          type: number
        - id: 'y'
          description: the second number to add
          type: number
      return:
        type: number
        description: the sum of the two numbers
  - name: tableExample()
    uid: 'api-documenter-test!DocClass1#tableExample:member(1)'
    package: api-documenter-test!
    fullName: tableExample()
    summary: 'An example with tables:'
    remarks: <table> <tr> <td>John</td> <td>Doe</td> </tr> </table>
    example: []
    isPreview: false
    isDeprecated: false
    syntax:
      content: 'tableExample(): void;'
      return:
        type: void
        description: ''
events:
  - name: malformedEvent
    uid: 'api-documenter-test!DocClass1#malformedEvent:member'
    package: api-documenter-test!
    fullName: malformedEvent
    summary: This event should have been marked as readonly.
    remarks: ''
    example: []
    isPreview: false
    isDeprecated: false
    syntax:
      content: 'malformedEvent: SystemEvent;'
      return:
        type: '<xref uid="api-documenter-test!SystemEvent:class" />'
  - name: modifiedEvent
    uid: 'api-documenter-test!DocClass1#modifiedEvent:member'
    package: api-documenter-test!
    fullName: modifiedEvent
    summary: This event is fired whenever the object is modified.
    remarks: ''
    example: []
    isPreview: false
    isDeprecated: false
    syntax:
      content: 'readonly modifiedEvent: SystemEvent;'
      return:
        type: '<xref uid="api-documenter-test!SystemEvent:class" />'
extends: '<xref uid="api-documenter-test!DocBaseClass:class" />'
